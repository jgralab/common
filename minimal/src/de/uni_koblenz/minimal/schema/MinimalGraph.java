/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.minimal.schema;

public interface MinimalGraph extends de.uni_koblenz.jgralab.Graph {

	// ------------------------ Code for Link ------------------------

	/**
	 * @return the first Link edge in this graph
	 */
	public de.uni_koblenz.minimal.schema.Link getFirstLinkInGraph();

	/**
	 * Creates a new Link edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.minimal.schema.Link createLink(de.uni_koblenz.minimal.schema.Node alpha, de.uni_koblenz.minimal.schema.Node omega);

	// ------------------------ Code for Node ------------------------

	/**
	 * @return the first Node vertex in this graph
	 */
	public de.uni_koblenz.minimal.schema.Node getFirstNode();

	/**
	 * Creates a new Node vertex in this graph.
	 *
	*/
	public de.uni_koblenz.minimal.schema.Node createNode();

	/**
	 * @return an Iterable for all edges of this graph that are of type Link or subtypes.
	 */
	public Iterable<de.uni_koblenz.minimal.schema.Link> getLinkEdges();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Node or subtypes.
	 */
	public Iterable<de.uni_koblenz.minimal.schema.Node> getNodeVertices();
	
}
